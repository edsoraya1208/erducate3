rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if user is a lecturer
    function isLecturer() {
      return isAuthenticated() &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'lecturer';
    }
    
    // Users collection rules
    match /users/{userId} {
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && (isOwner(userId) || isLecturer());
      allow read: if isAuthenticated() && (isOwner(userId) || isLecturer());
      allow delete: if false;
    }

    // Classes collection rules
    match /classes/{classId} {
      allow create: if isLecturer();
      allow read: if isLecturer();
      allow update: if isLecturer() && resource.data.instructorId == request.auth.uid;
      allow delete: if isLecturer() && resource.data.instructorId == request.auth.uid;
    }
    
    // ADD THIS: Exercises subcollection rules
    match /classes/{classId}/exercises/{exerciseId} {
      allow create, read, update, delete: if isLecturer();
    }
    
    // Deny all other collections by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}